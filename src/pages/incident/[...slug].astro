---
import { render } from 'astro:content';
import Layout from '@layouts/FullWidth.astro';

import BreadCrumbs from '@components/BreadCrumbs.astro';

import { getIncidents, type DecoratedIncidentEntry } from '@utils/collections';
import { getDateParts } from '@utils/page';

import startcase from 'lodash.startcase';

export async function getStaticPaths() {
  return (await getIncidents(true)).map((incident) => ({
    params: { slug: incident.id },
    props: incident,
  }));
}

const incident = Astro.props as DecoratedIncidentEntry;

const { year, month, day } = getDateParts(incident.data.date);
const { Content } = await render(incident);
---

<Layout bannerHeading="Incident information" pageTitle={incident.data.title} pageDescription={incident.data.snippet}>
  <BreadCrumbs path={Astro.url.pathname} slot="crumbs" />
  <section class="w-full bg-white pt-10 pb-16 dark:bg-zinc-900 dark:text-zinc-300">
    <div class="mx-auto grid grow grid-cols-1 gap-12 md:max-w-screen-lg lg:px-8 2xl:px-0">
      <div class="flex flex-1 flex-col gap-6 self-center">
        <div class="mx-auto my-3 max-w-screen-md space-y-6">
          <div class="flex flex-col items-center">
            <span>
              <h1 class="text-zinc-700 dark:text-zinc-50">{startcase(incident.data.title)}</h1>
              <div class="flex justify-center gap-1 text-sm">
                <span class="text-primary/80 font-semibold whitespace-nowrap dark:text-white">Published</span>
                <span>Â·</span>
                <span class="whitespace-nowrap uppercase">
                  {month}
                  {day}, {year}
                </span>
              </div>
            </span>
            <div class="flex justify-between gap-6">
              <p>
                affected systems: {
                  (
                    <span class="text-primary dark:text-accent font-bold">
                      {incident.data.affectedSystems.join(', ')}
                    </span>
                  )
                }
              </p>
              <p>severity: <span class="text-primary dark:text-accent font-bold">{incident.data.severity}</span></p>
              <p>
                resolved: <span class="text-primary dark:text-accent font-bold"
                  >{incident.data.resolved ? 'yes' : 'no'}</span
                >
              </p>
            </div>
          </div>
          <Content />
        </div>
      </div>
    </div>
  </section>
</Layout>
